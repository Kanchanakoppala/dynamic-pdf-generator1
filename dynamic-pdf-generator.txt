<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css"/>
  <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/popper.js@1.16.1/dist/umd/popper.min.js"></script>
  <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
  <link rel="preload" href="https://images.unsplash.com/photo-1667596023184-79b24a3e5a23?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1yZWxhdGVkfDl8fHxlbnwwfHx8fHw%3D" as="image" />

  <style>
    body {
      background-color: #222; 
      background-image: url("https://images.unsplash.com/photo-1689946242927-0537a5aa6d19?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1yZWxhdGVkfDI2fHx8ZW58MHx8fHx8");
      background-size: cover;
      background-position: center;
      opacity: 0; /* start hidden */
      transition: opacity 1s ease;
      will-change: opacity;
      margin: 0;
      min-height: 100vh;
    }

    .btn.btn-info {
      width: auto !important;     
      display: inline-block !important;  
      white-space: nowrap; 
    }

    .backgroundimage {
      position: relative;
      height: 40vh;
      border-radius: 20px;
      background-image: url("https://media.istockphoto.com/id/636585130/photo/usb.webp?a=1&b=1&s=612x612&w=0&k=20&c=vJ_K4gwBqSzBu_CXdyioO8kWdnY60BPrbea8fmAHt2g=");
      background-size: cover;
      background-position: center;
      font-family: "Monoton", cursive;
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
      overflow: hidden;
    }

    .backgroundimage::before {
      content: "";
      position: absolute;
      top: 0; left: 0; right: 0; bottom: 0;
      background-color: rgba(0, 0, 0, 0.5);
      border-radius: 20px;
      z-index: 0;
    }

    .headingtop {
      text-align: center;
      font-size: 30px;
      color: white;
      font-family: "Monoton", cursive;
      animation: bounce 2s infinite alternate;
      user-select: none;
      padding: 5px 10px;
      position: relative;
      z-index: 1;
    }

    @keyframes bounce {
      0%, 20%, 50%, 80%, 100% { transform: translateY(0); }
      40% { transform: translateY(-20px); }
      60% { transform: translateY(-10px); }
    }

    .card {
      background-color: white;
      padding: 20px;
      border-radius: 20px;
      margin: 15px;
      animation: fadeUp 1.5s ease forwards 1.5s;
      transition: transform 0.3s ease, box-shadow 0.3s ease;
      opacity: 0;
      transform: translateY(20px);
    }

    .card:hover {
      transform: translateY(-10px);
      box-shadow: 0 12px 24px rgba(0, 0, 0, 0.15);
    }

    @keyframes fadeUp {
      to {
        opacity: 1;
        transform: translateY(0);
      }
    }

    .background {
      background-image: url("https://images.unsplash.com/photo-1605635496372-3ac60aebe7a5?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1yZWxhdGVkfDE5fHx8ZW58MHx8fHx8");
      background-size: cover;
      padding: 40px 0;
    }

    #titletext {
      border-color: burlywood;
      margin: 5px;
      font-style: italic;
      border-radius: 20px;
      width: 80%;
      padding: 5px;
      text-decoration: underline;
    }

    #usertext {
      border-radius: 20px;
      border-color: burlywood;
      padding: 20px;
      font-style: italic;
      font-size: 20px;
      height: 200px;
      width: 90%;
      text-align: center;
      margin-top: 6px;
    }

    .heading {
      font-size: 30px;
      font-style: oblique;
      margin: 30px;
      color: rgb(128, 0, 128);
      text-align: center;
    }

    #button {
      border-radius: 20px;
      margin: 20px;
      border-color: rgb(220, 255, 247);
      background-color: aqua;
      color: blue;
      font-style: italic;
      padding: 5px;
    }

    .custom-file-upload {
      display: inline-block;
      padding: 10px 20px;
      border: 2px solid blanchedalmond;
      border-radius: 20px;
      background-color: lightblue;
      color: blue;
      font-weight: bold;
      cursor: pointer;
      user-select: none;
      transition: background-color 0.3s ease;
    }

    .custom-file-upload:hover {
      background-color: rgb(255, 0, 242);
    }

    h2, h3 {
      font-size: 20px !important;
      text-align: left;
      margin: 5px;
    }

    input[type="file"] {
      display: none;
    }
    .bg-white {
  background-color: #fffff0 !important;
}

  </style>
</head>

<body>
  <div id="sectionHome">
    <div class="backgroundimage">
      <p class="headingtop">WELCOME TO<br>PDF Generator</p>
    </div>

    <div class="card container">
      <h1>Instructions:</h1>
      <p>
        1. Title is optional, but content is mandatory.<br>
        2. Use Shift+Click to select multiple images at once.<br>
        3. Selected images will not be shown on the screen.<br>
        4. PDF will automatically create new pages if needed.<br>
        5. Enable downloads/pop-ups in your browser.<br>
        6. Use the Back button to return here.<br>
      </p>
      <div style="display: inline-block;">
        <button class="btn btn-info" onclick="display('sectionMain')">click here to generate PDF</button>
      </div>
    </div>
  </div>

  <div id="sectionMain" style="display:none;">
    <div class="background">
      <div class="container bg-white rounded p-4">
        <div class="text-center">
          <h1 class="heading">üìëPDF Generatorüìë</h1>

          <h2>Title:</h2>
          <input type="text" id="titletext" placeholder="üñäÔ∏è Enter your Title.." />

          <h3>Content:</h3>
          <textarea id="usertext" placeholder="Text your contentüóíÔ∏è......"></textarea>

          <h3>Upload Images:</h3>
          <label for="imageInput" class="custom-file-upload">Choose Images</label>
          <input type="file" id="imageInput" multiple />

          <div class="d-flex justify-content-center">
            <button id="button" onclick="translatingToPDF()">Download PDF‚¨áÔ∏è</button>
          </div>

          <div class="d-flex justify-content-start mt-3">
            <button class="btn btn-primary" onclick="display('sectionHome')">Back</button>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
  <script>
   
    window.onload = () => {
      const img = new Image();
      img.src = "https://images.unsplash.com/photo-1667596023184-79b24a3e5a23?w=500&auto=format&fit=crop&q=60&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1yZWxhdGVkfDl8fHxlbnwwfHx8fHw%3D";
      img.onload = () => {
        document.body.style.opacity = "1";
      };
      img.onerror = () => {
        
        document.body.style.opacity = "1";
      };
    };

    const { jsPDF } = window.jspdf;

    function display(sectionId) {
      document.getElementById("sectionHome").style.display = "none";
      document.getElementById("sectionMain").style.display = "none";
      document.getElementById(sectionId).style.display = "block";
    }

    async function translatingToPDF() {
      const title = document.getElementById('titletext').value.trim();
      const content = document.getElementById('usertext').value.trim();
      const imageFiles = document.getElementById('imageInput').files;

      if (!title && !content) {
        alert("Please enter a title and content.");
        return;
      }
      if (!content) {
        alert("Please enter content.");
        return;
      }

      const doc = new jsPDF();
      const pageHeight = doc.internal.pageSize.getHeight();
      const pageWidth = doc.internal.pageSize.getWidth();
      const margin = 15;
      let cursorY = margin;

      doc.setFontSize(22);
      doc.setFont("Times", "bold");
      const titleText = title || "Untitled";
      const textWidth = doc.getTextWidth(titleText);
      const xCenter = (pageWidth - textWidth) / 2;
      doc.text(titleText, xCenter, cursorY);
      doc.line(xCenter, cursorY + 1, xCenter + textWidth, cursorY + 1);
      cursorY += 15;

      doc.setFontSize(16);
      doc.setFont("Times", "normal");
      const maxLineWidth = pageWidth - margin * 2;
      const lineHeight = 10;
      const lines = doc.splitTextToSize(content, maxLineWidth);

      for (let i = 0; i < lines.length; i++) {
        if (cursorY + lineHeight > pageHeight - margin) {
          doc.addPage();
          cursorY = margin;
        }
        doc.text(lines[i], margin, cursorY);
        cursorY += lineHeight;
      }

      const imageWidth = 100;
      const imageHeight = 100;

      for (let i = 0; i < imageFiles.length; i++) {
        try {
          const imageDataUrl = await readFileAsDataURL(imageFiles[i]);
          if (cursorY + imageHeight + 20 > pageHeight - margin) {
            doc.addPage();
            cursorY = margin;
          }

          let imgType = 'JPEG';
          if (imageDataUrl.startsWith('data:image/png')) imgType = 'PNG';
          else if (imageDataUrl.startsWith('data:image/webp')) imgType = 'WEBP';

          doc.addImage(imageDataUrl, imgType, margin, cursorY, imageWidth, imageHeight);
          cursorY += imageHeight + 20;
        } catch (error) {
          console.error("Image load failed:", error);
          alert("Failed to load an image.");
        }
      }

      doc.save(`${titleText}.pdf`);
    }

    function readFileAsDataURL(file) {
      return new Promise((resolve, reject) => {
        const reader = new FileReader();
        reader.onload = e => resolve(e.target.result);
        reader.onerror = e => reject(e);
        reader.readAsDataURL(file);
      });
    }
  </script>
</body>
</html>
